import "./App.css";
import "bootstrap/dist/css/bootstrap.min.css";
import {Route,Routes,useNavigate} from "react-router-dom";
import {addCoffee, emptyCoffees, deleteCoffee, favoriteCoffee} from './slices/CoffeeSlicer';
import NavBar from "./components/NavBar";
import Favorites from "./pages/Favorites";
import Home from "./pages/Home";
import CoffeeDisplay from "./pages/CoffeeDisplay";
import CoffeeList from "./pages/HotCoffee";
import {Provider, useSelector} from 'react-redux'
import { useState, useEffect, useReducer } from "react";

let init = false;

const reducer = (state, action) => {
  switch(action.type) {
    case 'ADD': 
      return [...state, action.payload]
    case 'DELETE':
      let filteredArr = state.filter((m) => m.id !== action.payload.id)
      return filteredArr
    default:
      return state
  }
}

function App() {

  let [coffee, setCoffee] = useState(null)
  let [favorites, dispatch] = useReducer(reducer, [])

  let navigate = useNavigate();

  const addCoffee = (coffee) => {
    dispatch({ type: 'ADD', payload: coffee })
    navigate("/favorites");
  };

  const deleteCoffee = (coffee) => {
    dispatch({ type: 'DELETE', payload: coffee })
  };

  const getCoffee = async (temp) => {
    try {
      const response = await fetch(
        `https://api.sampleapis.com/coffee/${temp}`
      );
      const data = await response.json();
      console.log(data);
      return data;
    } catch (err) {
      console.log("ERROR! OH NO!!");
      console.log(err);
    }
  };

  useEffect(() => {
    if (!init) {
      getCoffee("hot");
      console.log("testing");
      init = true;
    }
  }, []);

  return (
    <div className="App">
      <NavBar />
      <Routes>
        <Route path="/" element={<Home/>}/>
        <Route path="/favorites" element=
          {<Favorites 
            favorites={favorites} 
            deleteCoffee={deleteCoffee}
            addCoffee={addCoffee}
          />} 
        />
        <Route path="/favorites/:id" element={<CoffeeDisplay favorites={favorites} getCoffee={getCoffee}/>} />
        <Route path='/drinks/:temp' element={<CoffeeList/>} />
      </Routes>
    </div>
    
  );
}

export default App;
